// True Combat entity definition file for Q3Radiant/GTK Radiant
// Thu 05/22/2003 22:20:59.20
// Edited by Shadowspawn
// Version: 1.b
// So many changes, just read it all
//=============================================================================


FUNC_* ENTITIES

//=============================================================================

/*QUAKED func_breakable (0 .5 .8) ? RESPAWN
When killed, it disappears spawns some particles and makes a break sound.

-------- KEYS --------
type: (default 0 = glass, 1 = wood, 2 = brick, 3 = ice)
health: (how much damage it can take)
wait: (default 0 never respawn, must be used with spawnflag)
Script: (script name for mission system)
notentfile: (item wont spawn if ent file is read)
notmission: (item wont spawn if gametype is not mission)
_lightmapscale: Default is 1, used for specifying the sampling quality of the lightmapping. .5 is 2x size lightmap data, 2 is 1/2.
_castshadows: 0, 1, or 2. 0 is default. 1 will cast shadows on itself and worldspawn, 2 will cast shadows only on itself.
*/
//=============================================================================

/*QUAKED func_bobbing (0 .5 .8) ? X_AXIS Y_AXIS
Solid entity that oscillates back and forth in a linear motion. By default, it will have an amount of displacement in either direction equal to the dimension of the brush in the axis in which it's bobbing. Entity bobs on the Z axis (up-down) by default. It can also emit sound if the "noise" key is set. Will crush the player when blocked.
-------- KEYS --------
speed : amount of time in seconds for one complete oscillation cycle (default 4).
height : sets the amount of travel of the oscillation movement (default 32). 
phase : sets the start offset of the oscillation cycle. Values must be 0 < phase < 1. Any integer phase value is the same as no offset (default 0).
noise : path/name of .wav file to play. Use looping sounds only (eg. sound/world/drone6.wav - See Notes).
model2 : path/name of model to include (eg: models/mapobjects/jets/jets01.md3).
origin : alternate method of setting XYZ origin of sound and .md3 model included with entity (See Notes).
light : constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).
color : constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.
angles: alternate "pitch, yaw, roll" angles method of positioning entity's movement and spawn. (default 0 0 0).
team: assign the same team name to multiple entities that should operate together (see Notes).
inskyroom: when set to 1, entity will be visible through the skyportal's camera.
_lightmapscale: Default is 1, used for specifying the sampling quality of the lightmapping
_castshadows: 0, 1, or 2. 0 is default. 1 will cast shadows on itself and worldspawn, 2 will cast shadows only on itself.
-------- SPAWNFLAGS --------
X_AXIS : entity will bob along the X axis.
Y_AXIS : entity will bob along the Y axis.
-------- NOTES --------
In order for the sound to be emitted from the entity, it is recommended to include a brush with an origin shader at its center, otherwise the sound will not follow the entity as it moves. Setting the origin key is simply an alternate method to using an origin brush. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.*/

//=============================================================================

/*QUAKED func_button (0 .5 .8) ?
When a button is touched by a player, it moves in the direction set by the "angle" key, triggers all its targets, stays pressed by an amount of time set by the "wait" key, then returns to it's original position where it can be operated again.
-------- KEYS --------
angle : determines the direction in which the button will move (up = -1, down = -2).
angles: alternate "pitch, yaw, roll" angles method of positioning entity's movement and spawn. (default 0 0 0).
target : all entities with a matching targetname will be triggered.
speed : speed of button's displacement (default 40).
wait : number of seconds button stays pressed (default 1, -1 = return immediately).
lip : lip remaining at end of move (default 4 units).
health : if set to a non-zero value, the button must be damaged by "health" amount of points to operate.
light : constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).
color : constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).
model2 : path/name of model to include (eg: models/mapobjects/pipe/pipe02.md3).
origin : alternate method of setting XYZ origin of .md3 model included with entity (See Notes).
team: assign the same team name to multiple entities that should operate together (see Notes).
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.
inskyroom: when set to 1, entity will be visible through the skyportal's camera
_lightmapscale: Default is 1, used for specifying the sampling quality of the lightmapping. .5 is 2x size lightmap data, 2 is 1/2.
_castshadows: 0, 1, or 2. 0 is default. 1 will cast shadows on itself and worldspawn, 2 will cast shadows only on itself.
-------- NOTES --------
Setting the origin key is simply an alternate method to using an origin brush. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.*/

//=============================================================================

/*QUAKED func_door (0 .5 .8) ? START_OPEN SILENT CRUSHER - TOGGLE - - TOGGLETC
Normal sliding door entity. By default, the door will activate when player walks close to it or when damage is inflicted to it.
-------- KEYS --------
angle : determines the opening direction of door (up = -1, down = -2).
angles: alternate "pitch, yaw, roll" angles method of positioning entity's movement and spawn. (default 0 0 0).
speed : determines how fast the door moves (default 100).
wait : number of seconds before door returns (default 2, -1 = return immediately)
lip : lip remaining at end of move (default 8)
targetname : if set, a func_button or trigger is required to activate the door.
dmg : damage to inflict on player when he blocks operation of door (default 4). Door will reverse direction when blocked unless CRUSHER spawnflag is set.
team: assign the same team name to multiple entities that should operate together (see Notes).
light : constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).
color : constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).
model2 : path/name of model to include (eg: models/mapobjects/pipe/pipe02.md3).
origin : alternate method of setting XYZ origin of .md3 model included with entity (See Notes).
_lightmapscale: Default is 1, used for specifying the sampling quality of the lightmapping. .5 is 2x size lightmap data, 2 is 1/2.
_castshadows: 0, 1, or 2. 0 is default. 1 will cast shadows on itself and worldspawn, 2 will cast shadows only on itself.
-------- SPAWNFLAGS --------
START_OPEN : the door will spawn in the open state and operate in reverse.
SILENT : Don't play sounds.
CRUSHER : door will not reverse direction when blocked and will keep damaging player until he dies or gets out of the way.
TOGGLETC : True Combat door toggles.
TOGGLE : wait in both the start and end states for a trigger event - used with target/targetname. If no targetname you can use TC open bind to toggle.
-------- NOTES --------
If you want doors to operate together, you have to team them manually by assigning the same team name to all of them. Setting the origin key is simply an alternate method to using an origin brush. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.
AREAPORTALS ARE DIFFERENT.
Make the complete areaportal skip and one face areaportal.
Unlike in Quake 2, doors that touch are NOT automatically teamed. If you want doors to operate together, you have to team them manually by assigning the same team name to all of them. Setting the origin key is simply an alternate method to using an origin brush. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.*/

//=============================================================================

/*QUAKED func_door_rotating (0 .5 .8) ? START_OPEN SILENT CRUSHER REVERSE TOGGLE X_AXIS Y_AXIS TOGGLETC
Normal sliding door entity. By default, the door will activate when player walks close to it or when damage is inflicted to it.
-------- KEYS --------
speed : determines how fast the door moves (default 120).
wait : number of seconds before door returns (default 2, -1 = return immediately)
targetname : if set, a func_button or trigger is required to activate the door.
dmg : damage to inflict on player when he blocks operation of door (default 4). Door will reverse direction when blocked unless CRUSHER spawnflag is set.
team: assign the same team name to multiple doors that should operate together (see Notes).
distance :	how many degrees the door will open (default 90)
light : constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).
color : constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).
model2 : path/name of model to include (eg: models/mapobjects/pipe/pipe02.md3).
origin : alternate method of setting XYZ origin of .md3 model included with entity (See Notes).
oneway : When set to 1, door will only open and close in one direction.
_lightmapscale: Default is 1, used for specifying the sampling quality of the lightmapping. .5 is 2x size lightmap data, 2 is 1/2.
_castshadows: 0, 1, or 2. 0 is default. 1 will cast shadows on itself and worldspawn, 2 will cast shadows only on itself.
-------- SPAWNFLAGS --------
START_OPEN : the door will spawn in the open state and operate in reverse.
SILENT : Don't play sounds.
CRUSHER : door will not reverse direction when blocked and will keep damaging player until he dies or gets out of the way.
REVERSE : if you want the door to open in the other direction, use this switch.
TOGGLETC : True Combat door toggles.
X_AXIS : open on the X axis.
Y_AXIS : open on the Y axis.
TOGGLE : wait in both the start and end states for a trigger event - used with target/targetname. If no targetname you can use the TC cmd to open or close.
-------- NOTES --------
If you want doors to operate together, you have to team them manually by assigning the same team name to all of them. Setting the origin key is simply an alternate method to using an origin brush. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.
AREAPORTALS ARE DIFFERENT.
Make the complete areaportal skip and one face areaportal.
*/
//=============================================================================

/*QUAKED func_group (0 .5 .8) ?
This is not an entity as such. It is strictly an editor utility and compiler defnition to group world brushes and patches together for convenience (selecting, moving, copying, etc). You cannot group entities with this.
-------- KEYS --------
_lightmapscale: Default is 1, used for specifying the sampling quality of the lightmapping. .5 is 2x size lightmap data, 2 is 1/2.
_castshadows: 0, 1, or 2. 0 is default. 1 will cast shadows on itself and worldspawn, 2 will cast shadows only on itself.
alphamap: Name of the shader for positioning terrain on a func_group.
shader: Name of the shader for terrain.
-------- NOTES --------
The TAB key can be used to flip through the component pieces of a selected func_group entity, isolating individual components.
If you have camera paint enabled you will only select one brush by default.
*/

//=============================================================================

/*QUAKED func_pendulum (0 .5 .8) ?
Solid entity that describes a pendulum back and forth rotation movement. Rotates on the X axis by default. Pendulum frequency is a physical constant based on the length of the beam and gravity. Blocking the pendulum instantly kills a player.
-------- KEYS --------
angle : angle offset of axis of rotation from default X axis (default 0).
speed : angle of swing arc in either direction from initial position (default 30).
phase : sets the start offset of the swinging cycle. Values must be 0 < phase < 1. Any integer phase value is the same as no offset (default 0).
noise : path/name of .wav file to play. Use looping sounds only (eg. sound/world/drone6.wav).
model2 : path/name of model to include (eg: models/mapobjects/jets/jets01.md3).
origin : alternate method of setting XYZ origin of entity's rotation axis and .md3 model included with entity (default "0 0 0" - See Notes).
light : constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).
color : constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.
inskyroom: when set to 1, entity will be visible through the skyportal's camera
team: assign the same team name to multiple entities that should operate together (see Notes).
dmg: amount of damage when crushed.
angles: alternate "pitch, yaw, roll" angles method of positioning entity's movement and spawn. (default 0 0 0).
_lightmapscale: Default is 1, used for specifying the sampling quality of the lightmapping. .5 is 2x size lightmap data, 2 is 1/2.
_castshadows: 0, 1, or 2. 0 is default. 1 will cast shadows on itself and worldspawn, 2 will cast shadows only on itself.
-------- NOTES --------
Players will DIE when they touch this.
You need to have an origin brush as part of this entity. The center of that brush will be the point through which the rotation axis passes. Setting the origin key is simply an alternate method to using an origin brush. Pendulum will rotate along the X axis by default. Very crude operation: pendulum cannot rotate along Z axis, the speed of swing (frequency) is not adjustable. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.

It is possible to rotate misc_models and brushmodels at any angle on any (or multiple) axes. It's just a little-known and undocumented feature:

Make a func_pendulum (out of, say, a nodraw brush), and attach the model to it using a model2 key. Now, give the func_pendulum a speed of 0, and instead of using the "angle" key, use an "angles" key (note the "s") and give it a pitch-yaw-roll value (e.g. 45 90 45) to position your model at whatever angle you wish. It will take a little experimentation, but pitch is up-and-down angle, yaw is compass direction, and roll is sideways angle.


*/

//=============================================================================

/*QUAKED func_plat (0 .5 .8) ?
Rising platform the player can ride to reach higher places. Plats must always be drawn in the raised position, so they will operate and be lighted correctly but they spawn in the lowered position. The plat will stay in the raised position until the player steps off. There are no proper sounds for this entity, only beep noises. It will spawn in the game and work properly but it sounds silly (see Notes).
-------- KEYS --------
speed : determines how fast the plat moves (default 150).
lip : lip remaining at end of move (default 16). Has no effect if "height" is set.
height : if set, this will determine the total amount of vertical travel of the plat.
dmg : damage to inflict on player when he blocks operation of plat (default 4). Plat will reverse direction when blocked.
targetname : if set, the trigger that points to this will raise the plat each time it fires. The plat raises and comes back down a second later if no player is on it.
light : constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).
color : constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).
model2 : path/name of model to include (eg: models/mapobjects/pipe/pipe02.md3).
origin : alternate method of setting XYZ origin of .md3 model included with entity (See Notes).
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.
team: assign the same team name to multiple entities that should operate together (see Notes).
inskyroom: when set to 1, entity will be visible through the skyportal's camera
angles: alternate "pitch, yaw, roll" angles method of positioning entity's movement and spawn. (default 0 0 0).
_lightmapscale: Default is 1, used for specifying the sampling quality of the lightmapping. .5 is 2x size lightmap data, 2 is 1/2.
_castshadows: 0, 1, or 2. 0 is default. 1 will cast shadows on itself and worldspawn, 2 will cast shadows only on itself.
-------- NOTES --------
By default, the total amount of vertical travel of a platform is implicitly determined by the overall vertical size of the brushes of which it's made minus the lip value. But if the "height" key is used, then the total amount of vertical travel of the plat will be exactly that value regardless of the shape and size of the plat and regardless of the value of the "lip" key. Using the "height" key is the best method for any kind of platforms and the only possible one for thin plats which need to travel vertical distances many times their own thickness. Setting the origin key is simply an alternate method to using an origin brush. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.

There is a way to make plats play proper sounds. Just create a sound\movers\plats folder under baseq3 and put 2 sounds named pt1_strt.wav and pt1_end.wav in it. Those can be the renamed sounds from the Q2 plats or renamed copies of the sound\movers\doors sounds you can extract from your pak0.pk3 file or new custom sounds if you're up to it. Thanks to Fragzilla for the tip.*/

//=============================================================================

/*QUAKED func_rotating (0 .5 .8) ? - - X_AXIS Y_AXIS
Solid entity that rotates continuously. Rotates on the Z axis by default and requires an origin brush. It will always start on in the game and is not targetable.
-------- KEYS --------
speed : determines how fast entity rotates (default 100).
noise : path/name of .wav file to play. Use looping sounds only (eg. sound/world/drone6.wav).
model2 : path/name of model to include (eg: models/mapobjects/bitch/fembotbig.md3).
origin : alternate method of setting XYZ origin of entity's rotation axis and .md3 model included with entity (default "0 0 0" - See Notes).
light : constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).
color : constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.
inskyroom: when set to 1, entity will be visible through the skyportal's camera
team: assign the same team name to multiple entities that should operate together (see Notes).
angles: alternate "pitch, yaw, roll" angles method of positioning entity's movement and spawn. (default 0 0 0).
_lightmapscale: Default is 1, used for specifying the sampling quality of the lightmapping. .5 is 2x size lightmap data, 2 is 1/2.
_castshadows: 0, 1, or 2. 0 is default. 1 will cast shadows on itself and worldspawn, 2 will cast shadows only on itself.
-------- SPAWNFLAGS --------
X_AXIS : entity will rotate along the X axis.
Y_AXIS : entity will rotate along the Y axis.
-------- NOTES --------
You need to have an origin brush as part of this entity. The center of that brush will be the point through which the rotation axis passes. Setting the origin key is simply an alternate method to using an origin brush. It will rotate along the Z axis by default. You can check either the X_AXIS or Y_AXIS box to change that. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.*/

It is possible to rotate misc_models and brushmodels at any angle on any (or multiple) axes.

For misc_models: Make a func_rotating (out of, say, a nodraw brush), and attach the model to it using a model2 key. Now, give the func_pendulum a speed of 0, and instead of using the "angle" key, use an "angles" key (note the "s") and give it a pitch-yaw-roll value (e.g. 45 90 45) to position your model at whatever angle you wish. It will take a little experimentation, but pitch is up-and-down angle, yaw is compass direction, and roll is sideways angle.

//=============================================================================

/*QUAKED func_static (0 .5 .8) ?
Static bspmodel. Can be used for conditional walls and models.
-------- KEYS --------
model2 : path/name of model to include (eg: models/mapobjects/bitch/fembotbig.md3).
origin : alternate method of setting XYZ origin of .md3 model included with entity (See Notes).
light : constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).
color : constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).
targetname : if set, a func_button or trigger can make entity disappear from the game (See Notes).
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.
inskyroom: when set to 1, entity will be visible through the skyportal's camera.
angles: alternate "pitch, yaw, roll" angles method of positioning entity's movement and spawn. (default 0 0 0).
_lightmapscale: Default is 1, used for specifying the sampling quality of the lightmapping. .5 is 2x size lightmap data, 2 is 1/2.
_castshadows: 0, 1, or 2. 0 is default. 1 will cast shadows on itself and worldspawn, 2 will cast shadows only on itself.
-------- NOTES --------
When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value. If a model is included with a targeted func_static, the brush(es) of the entity will be removed from the game but the .md3 model won't: it will automatically be moved to the (0 0 0) world origin so you should NOT include an .md3 model to a targeted func_static.

Because the map has only a single bot navigation file, func_static's cannot be used to make significant changes in game play flow between differing game types.*/

//=============================================================================

//=============================================================================

/*QUAKED func_timer (0 .5 .8) (-8 -8 -8) (8 8 8) START_ON
Time delay trigger that will continuously fire its targets after a preset time delay. The time delay can also be randomized. When triggered, the timer will toggle on/off.
-------- KEYS --------
wait : delay in seconds between each triggering of its targets (default 1).
random : random time variance in seconds added or subtracted from "wait" delay (default 0 - see Notes).
target : this points to the entities to trigger.
targetname : a func_button or trigger that points to this will toggle the timer on/off when activated.
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.
-------- SPAWNFLAGS --------
START_ON : timer will start on in the game and continuously fire its targets.
-------- NOTES --------
When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).*/

//=============================================================================

/*QUAKED func_train (0 .5 .8) ?
Trains are moving solids that follow a string of path_corner entities. Trains in Q3A are very basic, they also require an origin brush (see Notes).
-------- KEYS --------
speed : speed of displacement of train (default 100 or overridden by speed value of path).
target : this points to the first path_corner of the path which is also the spawn location of the train's origin.
model2 : path/name of model to include (eg: models/mapobjects/pipe/pipe02.md3).
origin : alternate method of setting XYZ origin of the train's brush(es) and .md3 model included with entity (See Notes).
light : constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).
color : constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.
inskyroom: when set to 1, entity will be visible through the skyportal's camera
_lightmapscale: Default is 1, used for specifying the sampling quality of the lightmapping. .5 is 2x size lightmap data, 2 is 1/2.
_castshadows: 0, 1, or 2. 0 is default. 1 will cast shadows on itself and worldspawn, 2 will cast shadows only on itself.
-------- NOTES --------
1. Trains always start on in the game.
2. Trains do not damage the played when blocked.
3. Trains cannot emit sound.
4. Trains CAN be triggerable or toggle-able.
5. Trains cannot be block-stopped just by getting in their way, the player must be wedged between the train and another obstacle to block it.

Setting the origin key is simply an alternate method to using an origin brush. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.*/


//=============================================================================

INFO_* ENTITIES

//=============================================================================


/*QUAKED info_flare (0 0.5 0) (-8 -8 -8) (8 8 8) SUN BIGSUN
Non-displayed entity which makes a light flare effect.
Only bright lights should have an additional flare effect.

-------- KEYS --------
health: overrides the default size of 100.
wait: flare color (default 0 = white, 1 = soft yellow, 2 = soft green, 3 = orange):
random : altitude - pitch
count: degree - yaw
*/

/*QUAKED info_camp (.5 .5 0) (-32 -32 -32) (32 32 32)
This atttracts bots which have a camping preference in their AI characteristics. It should be placed at least 32 units away from any brush surface.
-------- KEYS --------
range : number of units that the bot can move away from camp entity while camping on it.
weight : number that is compared against the weight assigned to all the other camp spots in the map to determine if a bot chooses to camp there. The value is normalized against all other weight values.
-------- NOTES --------
Examples of bots which have a high camping preference are: Razor, Tank Jr., Grunt, Patriot and Doom. Examples of bots which have a low camping preference are: Klesk, Mynx, Sarge, Keel and Xaero.*/


//=============================================================================
/*QUAKED info_notnull (0 .6 0) (-8 -8 -8) (8 8 8)
Used as a positional target for entities that can use directional pointing. A target_position can be used instead of this but was kept in Q3A for legacy purposes.
-------- KEYS --------
targetname : must match the target key of entity that uses this for pointing.
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.*/

//=============================================================================

/*QUAKED info_null (.1 .7 .1) (-8 -8 -8) (8 8 8)
Used as a positional target for light entities to create a spotlight effect. A target_position can be used instead of this but was kept in Q3A for legacy purposes.
-------- KEYS --------
targetname : must match the target key of entity that uses this for pointing.
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.*/

//=============================================================================

/*QUAKED info_player_deathmatch (1 0 1) (-16 -16 -24) (16 16 48) INITIAL
Normal player spawning location for Q3A levels.
-------- KEYS --------
angle : direction in which player will look when spawning in the game. Does not apply to bots.
target : this can point at a target_give entity for respawn freebies.
nobots : when set to 1, bots will never use this spawn point to respawn in the game.
nohumans : when set to 1, human players will never use this spawn point to respawn in the game.
notfree : when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam : when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle : when set to 1, entity will not spawn in Single Player mode (bot play mode).
-------- SPAWNFLAGS --------
INITIAL : makes the spawnpoint the initial place for the player to spawn at the beginning of the game.
model="models/mapobjects/player/player.md3"*/

//=============================================================================

/*QUAKED info_player_intermission (1 0 1) (-16 -16 -16) (16 16 16)
Camera for intermission screen between matches. Can be aimed by setting the "angles" key or targeting an pointing to an aiming entity. Use only one per level.
-------- KEYS --------
angles: alternate "pitch, yaw, roll" angles method of aiming intermission camera (default 0 0 0).
target : point this to an info_notnull or target_position entity to set the camera's pointing angles.
-------- NOTES --------
In genuine bot arena matches, the podium for the 1st, 2nd and 3rd place players at the end of the match is generated by this entity. The podium's origin will automatically be located 128 units in the direction of the camera's view and 84 units down from the y height of the view line at that point. It will also always be generated on a level plane regardless of the pointing angle of the camera so if that angle is too steep, part of the podium model might not be visible. Make sure you leave at least 106 units of free space in front of where the camera points to otherwise the podium model won't be visible at all.*/

//=============================================================================

/*QUAKED info_player_start (1 0 0) (-16 -16 -24) (16 16 48)
Player spawn location. It works in Quake III Arena, but it is not used in the Id maps. Use info_player_deathmatch instead.
-------- KEYS --------
angle : direction in which player will look when spawning in the game.
target : this can point at a target_give entity for respawn freebies.
model="models/mapobjects/player/player.md3"*/

//=============================================================================

//QUAKED info_spectator_start (1 0 0) (-16 -16 -24) (16 16 32)
//Spectator spawn location. Doesn't appear to work in game. Commented out.
//-------- KEYS --------
//notfree : when set to 1, entity will not spawn in "Free for all" and "Tournament" modes. 
//gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.
//notteam : when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
//notsingle : when set to 1, entity will not spawn in Single Player mode (bot play mode).
//notta: when set to 1, entity will not spawn in Team Arena
//notq3a: when set to 1, entity will not spawn in stock Quake 3

//=============================================================================

ITEM_* ENTITIES

//=============================================================================

/*QUAKED item_armor_body (.6 0 0) (-24 -24 -16) (24 24 40) SUSPENDED
Red Armor
-------- KEYS --------
No keys.
-------- SPAWNFLAGS --------
SUSPENDED : item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
 This is used by the bots. it cannot be picked up. Place these around the map for reachability purposes.When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/armor/armor_red.md3"

/*QUAKED item_bot_waypoint (.6 0 0) (-24 -24 -16) (24 24 40) SUSPENDED
Some sort of bot attraction entity, similar to Red Armor
-------- KEYS --------
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.
-------- SPAWNFLAGS --------
SUSPENDED : item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.
*/

//=============================================================================
/*QUAKED item_health_large (1 0 0) (-16 -16 -16) (16 16 28) SUSPENDED
Gold cross bubble 
-------- KEYS --------
No keys.
-------- SPAWNFLAGS --------
SUSPENDED : item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
 This is used by the bots. it cannot be picked up. Place these around the map for reachability purposes.
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/health/large_cross.md3"*/

//=============================================================================

/*QUAKED item_botroam (.8 .3 .0) (-8 -8 -8) (8 8 8) SUSPENDED
Game Function: An invisible entity which attracts a bot to it. Use to move bots to parts of a map that might otherwise not be used (NEW ENTITY).
-------- KEYS --------
weight: non-zero floating point value, most often in the range 0 to 400. (Higher values are allowed but keep in mind that the bot should also be attracted to normal items.  Don't make the weight value too high.
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.
-------- SPAWNFLAGS --------
SUSPENDED : item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The item_botroam entity can be used when a bot does not roam the whole level or prefers to go to only specific areas. This (invisible) item can be placed in a map just like regular items. Nobody can actually pick up the item it's only used to attract bots to certain places of the map. The value is the weight of the roam_item is relative to the weight assigned other items in the map (each bot has its own weights). The bot character specific item weights are stored with the bot characters AI files ("botname"_i.c for items and "botname"_w.c for weapons) in the botfiles/bots/ sub-folder in the .pk3 file.*/

//=============================================================================

//=============================================================================
LIGHT ENTITY

//=============================================================================

/*QUAKED light (.65 .65 1) (-8 -8 -8) (8 8 8) LDAT_LINEAR LDAT_NOSCALE LAAT_QUADRATIC LAAT_DOUBLE_QUADRATIC
Non-displayed point light source.
-------- KEYS --------
light: overrides the default 300 intensity.
_color : weighted RGB value of light color (default white - 1.0 1.0 1.0).
Linear checkbox gives linear falloff instead of inverse square
Lights pointed at a target will be spotlights.
radius: overrides the default 64 unit radius of a spotlight at the target point.
flare_color: sets RGB value of flare color. (default white - 1.0 1.0 1.0).
flare_radius: sets radius of flare and drawing of flare (default 0).
"_sun" "1": Enables you to point the sun.
-------- VLIGHT KEYS --------
atten_distscale:  falloff for light ents.  .25 will give you 4x the falloff distance, .5 will give twice the distance, etc.
atten_anglescale: angle falloff
-------- NOTES --------
Create a spotlight (a light targetted at an info_null) and add the key "_sun" "1" to it. The angle of the path will determine the angle of the sun, and the _color/light of the light entity will determine the color/brightness of the sun. To supress q3map_sun in your sky shaders, add "_noshadersun" "1" to worldspawn.
-------- SPAWNFLAGS --------
LDAT_LINEAR, LDAT_NOSCALE, LAAT_QUADRATIC, LAAT_DOUBLE_QUADRATIC: Falloff settings. Note: Last three supported only with q3map -vlight. Also, q3map -light does not support linear falloff on spotlights.*/


//=============================================================================
/*QUAKED lightJunior (0.8 0.9 0.8) (-8 -8 -8) (8 8 8) nonlinear angle negative_spot negative_point
Non-displayed light that only affects dynamic game models, but does not contribute to lightmaps
"light" overrides the default 300 intensity.
Nonlinear checkbox gives inverse square falloff instead of linear 
Lights pointed at a target will be spotlights.
"radius" overrides the default 64 unit radius of a spotlight at the target point.
*/
//=============================================================================
MISC_* ENTITIES

//=============================================================================

/*QUAKED misc_model (1 .5 .25) (-16 -16 -16) (16 16 16)
Generic placeholder for inserting .md3 models in game. Requires compilation of map geometry to be added to level.
-------- KEYS --------
angle: direction in which model will be oriented.
model : path/name of model to use (eg: models/mapobjects/teleporter/teleporter.md3).
_celshader: this is the shader name for 'cell shading', ex: cel/ink 
"modelscale"	scale multiplier (defaults to 1x)
"modelscale_vec"	scale multiplier (defaults to 1 1 1, scales each axis as requested)
"modelscale_vec" - Set scale per-axis.  Overrides "modelscale", so if you have both, the "modelscale" is ignored

**NOTES**

It is possible to rotate misc_models at any angle on any (or multiple) axes. It's just a little-known and undocumented feature:

Make a func_pendulum (out of, say, a nodraw brush), and attach the model to it using a model2 key. Now, give the func_pendulum a speed of 0, and instead of using the "angle" key, use an "angles" key (note the "s") and give it a pitch-yaw-roll value (e.g. 45 90 45) to position your model at whatever angle you wish. It will take a little experimentation, but pitch is up-and-down angle, yaw is compass direction, and roll is sideways angle.
*/

//=============================================================================
//
//QUAKED misc_turret (1 .5 .25) (-16 -16 -16) (16 16 16)
//Generic placeholder for inserting .md3 models in game. Requires compilation of map geometry to be added to level.
//-------- KEYS --------
//angle: direction in which model will be oriented.
//model : path/name of model to use (eg: models/mapobjects/teleporter/teleporter.md3).
//model 	"models/mapobjects/mg42/mg42.md3"
//model2 	"models/mapobjects/mg42/mg42a1.md3"
//type 		"7"
//
//=============================================================================

/*QUAKED misc_portal_camera (1 .8 0) (-8 -8 -8) (8 8 8) SLOWROTATE FASTROTATE NOSWING
Portal camera. This camera is used to project its view onto a portal surface in the level through the intermediary of a misc_portal_surface entity. Use the "angles" key or target a target_position or info_notnull entity to set the camera's pointing direction.
-------- KEYS --------
angles: this sets the pitch and yaw aiming angles of the portal camera (default 0 0). Use "roll" key to set roll angle.
target : point this to a target_position entity to set the camera's pointing direction.
targetname : a misc_portal_surface portal surface indicator must point to this.
roll: roll angle of camera. A value of 0 is upside down and 180 is the same as the player's view.
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.
-------- SPAWNFLAGS --------
SLOWROTATE : makes the portal camera rotate slowly along the roll axis.
FASTROTATE : makes the portal camera rotate faster along the roll axis.
-------- NOTES --------
Both the setting "angles" key or "targeting a target_position" methods can be used to aim the camera. However, the target_position method is simpler. In both cases, the "roll" key must be used to set the roll angle. If either the SLOWROTATE or FASTROTATE spawnflag is set, then the "roll" value is irrelevant.*/

//=============================================================================


/*QUAKED misc_portal_sky (.9 1 0) (-8 -8 -8) (8 8 8) USE_SURFACE
Portal sky. This is used to project its view origin from a miniture map room onto all nodraw sky in the level. This includes caulk. It's best advised not to have any hom's within fov of this ent. BadThings can happen.
-------- SPAWNFLAGS --------
USE_SURFACE : If you're using curves/patches and see "sparklies" gaps between brushes you can't fix, you may use this option and add misc_portal_sky_surface near places you would see the sky.
-------- NOTES --------
USE_SURFACE changes misc_portal_sky so it's only seen if you're in view of a surface entity.
Movers will not be visible through this unless the inskyroom key/value of 1 is set in the mover's key list.*/

//=============================================================================

/*QUAKED misc_portal_sky_surface (.9 .8 .2) (-8 -8 -8) (8 8 8)
Portal Sky surface. This is used to project its local PVS origin to a player. You must use a misc_portal_sky, and keep in mind it's always drawing 'underneith' your brushwork. */

//=============================================================================

/*QUAKED misc_portal_surface (.9 .6 .1) (-8 -8 -8) (8 8 8)
Portal surface indicator. This will "lock on" the brush face closest to it and identify as a portal. The view displayed on the portal surface is the view of the misc_portal_camera that this entity targets. Also used for mirrors (see Notes).
-------- KEYS --------
target : point this to a misc_portal_camera that "sees" the view you want to display on the portal.
notfree : when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
-------- NOTES --------
The entity must be no farther than 64 units away from the portal surface to lock onto it. To make a mirror, apply the common/mirror shader to the surface, place this entity near it but don't target a misc_portal_camera.*/

//=============================================================================

/*QUAKED misc_teleporter_dest (.8 .6 .5) (-32 -32 -24) (32 32 -16)
Teleport destination location point for trigger_teleporter entities. Basically an editor-enhanced target_position, the same thing as an info_notnull. GG ID.
-------- KEYS --------
angle : direction in which player will look when teleported.
targetname : make the trigger_teleporter point to this.
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.*/

/*QUAKED misc_mapmodel (0 .5 .8) ?
Used to group brushes into bmodels for later use in missions.
_lightmapscale: Default is 1, used for specifying the sampling quality of the lightmapping. .5 is 2x size lightmap data, 2 is 1/2.
_castshadows: 0, 1, or 2. 0 is default. 1 will cast shadows on itself and worldspawn, 2 will cast shadows only on itself.
*/

//=============================================================================

/*QUAKED misc_turret (.5 .5 .8) (-8 -8 -8) (8 8 8)
TurretGun
"type" weapon it shoots.
 7: machinegun

"ud" 	max degrees up/down
"rl" max degrees right/left
"angle" the angle it starts out looking
"rate" rate of fire
"model" set the model of turret.

-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/mapobjects/mg42/mg42.md3"*/

//=============================================================================

PATH_* ENTITIES

//=============================================================================

/*QUAKED path_corner (.5 .3 0) (-2 -2 -2) (2 2 2)
Path corner entity that func_trains can be made to follow.
-------- KEYS --------
target : point to next path_corner in the path.
targetname : the train following the path or the previous path_corner in the path points to this.
speed : speed of func_train while moving to the next path corner. This will override the speed value of the train.
wait : number of seconds func_train will pause on path corner before moving to next path corner (default 0 - see Notes).
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.
-------- NOTES --------
Setting the wait key to -1 will not make the train stop on the path corner, it will simply default to 0.*/

//=============================================================================

TARGET_* ENTITIES

//=============================================================================

/*QUAKED target_delay (0 .7 .7) (-8 -8 -8) (8 8 8)
Time delay trigger intermediary. Like a target_relay, this can only be fired by other triggers which will cause it in turn to fire its own targets.
-------- KEYS --------
targetname : activating trigger points to this.
target : this points to entities to activate when this entity is triggered.
wait : delay in seconds from when this gets triggered to when it fires its own targets (default approx. 1).
delay : same as wait? replaces it? WTF?...I'm confused now.
random : random time variance in seconds added or subtracted from "wait" delay (default 0 - see Notes).
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.
target_shadername: originally defined spawned shadername
target_shadernewname: new shader for the originally defined spawned shadername
-------- NOTES --------
When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).*/
For target_shadername, you can redefine any shader loaded in a level. ANY shader that's currently in the game.
For example, if you wanted to switch all blue beams on a level to red: 
"targetshadername" "textures/sfx/beamblue"
"targetshadernewname" "textures/sfx/beamred"
To switch it back, redefine the original texture.
"targetshadername" "textures/sfx/beamblue"
"targetshadernewname" "textures/sfx/beamblue"
//=============================================================================

/*QUAKED target_give (.6 .9 .6) (-8 -8 -8) (8 8 8)
This is used to give ammo, weapons, health or items to the player who activates it.
-------- KEYS --------
target : this points to the item(s) to give when activated.
targetname : activating trigger or spawn entity points to this.
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.
-------- NOTES --------
There are 2 ways to use this entity.
a) automatically give items to players when they spawn in the game: make a spawn location entity like info_player_deathmatch or CTF respawn points target this entity, then make it target the item(s) to give to the player upon respawn.
b) give items to players during the game: make a trigger_multiple target this entity, then make it target the item(s) to give to the player when the trigger is touched.*/

//=============================================================================

/*QUAKED target_kill (.2 .0 0) (-8 -8 -8) (8 8 8)
This will kill the player who activates the trigger that fires this target.
-------- KEYS --------
targetname : the activating trigger points to this.
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.*/

//=============================================================================

/*QUAKED target_location (.2 .5 .2) (-8 -8 -8) (8 8 8)
Location marker used by bots and players for team orders and team chat in the course of Teamplay games. The closest target_location in sight is used for the location. If none is in sight, the closest in distance is used.
-------- KEYS --------
message :  name of the location (text string). Displayed in parentheses in front of all team chat and order messages.
count : color of the location text displayed in parentheses during team chat. Set to 0-7 for color.
   0 : white (default)
   1 : red
   2 : green
   3 : yellow
   4 : blue
   5 : cyan
   6 : magenta
   7 : white
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.*/

//=============================================================================

/*QUAKED target_position (0 .6 .1) (-8 -8 -8) (8 8 8)
Aiming target for entities like light, misc_portal_camera and trigger_push (jump pads) in particular, same thing as an info_notnull
-------- KEYS --------
targetname : the entity that requires an aiming direction points to this.
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.
-------- NOTES --------
To make a jump pad, place this entity at the highest point of the jump and target it with a trigger_push entity.*/

//=============================================================================

/*QUAKED target_print (.8 .5 .8) (-8 -8 -8) (8 8 8) REDTEAM BLUETEAM PRIVATE
This will print a message on the center of the screen when triggered. By default, all the clients will see the message.
-------- KEYS --------
message : text string to print on screen.
targetname : the activating trigger points to this.
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.
-------- SPAWNFLAGS --------
REDTEAM : only the red team players will see the message.
BLUETEAM : only the blue team players will see the message.
PRIVATE : only the player that activates the target will see the message.*/

//=============================================================================

/*QUAKED target_push (.5 .5 .5) (-8 -8 -8) (8 8 8) BOUNCEPAD
This can be used to create jump pads and launch ramps. The direction of push can be set by the "angles" key or pointing to a target_position or info_notnull entity. Unlike trigger_push, this is NOT client side predicted and must be activated by a trigger.
-------- KEYS --------
angles: this sets the pitch and yaw aiming angles of push entity (default 0 0). The roll angle does not apply.
speed : speed of push (default 1000). Has no effect if entity targets an aiming entity.
count : What percentage of the player's maxspeed is needed to activate it.
targetname : the activating trigger points to this. Push originates from the location of the trigger.
target : this points to the aiming entity to which the player will jump.
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.
-------- SPAWNFLAGS --------
BOUNCEPAD : if set, trigger will play bounce noise instead of silent noise when activated.
-------- NOTES --------
To make a jump pad or launch ramp, create a trigger_multiple where the jump must originate. Place the target_push directly above the trigger_multiple and place the target_position entity at the highest point of the jump. Target the trigger_multiple to the target_push and target the target_push to the target_position/info_notnull (or set the target_push's "angles" key). Note that the "angle" key also works.*/

//=============================================================================

/*QUAKED target_relay (0 .7 .7) (-8 -8 -8) (8 8 8) RED_ONLY BLUE_ONLY RANDOM
This can only be activated by other triggers which will cause it in turn to activate its own targets. The AI recognizes team-keyed items of this nature, while wf_team does not.
-------- KEYS --------
targetname : activating trigger points to this.
target : this points to entities to activate when this entity is triggered.
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.
-------- SPAWNFLAGS --------
RED_ONLY : only red team players can activate trigger.
BLUE_ONLY : only red team players can activate trigger.
RANDOM : one one of the targeted entities will be triggered at random.*/

//=============================================================================

/*QUAKED target_remove_powerups (.2 .0 .1) (-8 -8 -8) (8 8 8)
This takes away any and all item_* type powerups from player except health and armor (holdable_* items are not taken away either). Must be activated by a button or trigger_multiple entity. The player that activates the trigger will lose any powerup(s) currently in his possession.
-------- KEYS --------
targetname : activating trigger points to this.
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.*/

//=============================================================================

/*QUAKED target_score (.6 .5 0) (-8 -8 -8) (8 8 8)
This is used to automatically give frag points to the player who activates this. A spawn location entity like info_player_* or CTF respawn points can target this entity to give points to the player when he spawns in the game. Or a trigger can also be used to activate this. The activator of the trigger will get the points.
-------- KEYS --------
targetname : ativating entity points to this.
count: number of frag points to give to player (default 1).
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.
*/

//=============================================================================

/*QUAKED target_speaker (.2 .7 .7) (-8 -8 -8) (8 8 8) LOOPED_ON LOOPED_OFF GLOBAL ACTIVATOR BROADCAST
Sound generating entity that plays .wav files. Normal non-looping sounds play each time the target_speaker is triggered. Looping sounds can be set to play by themselves (no activating trigger) or be toggled on/off by a trigger.
-------- KEYS --------
noise : path/name of .wav file to play (eg. sound/world/growl1.wav - see Notes).
wait : delay in seconds between each time the sound is played ("random" key must be set - see Notes).
random : random time variance in seconds added or subtracted from "wait" delay ("wait" key must be set - see Notes).
targetname : the activating button or trigger points to this.
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.
-------- SPAWNFLAGS --------
LOOPED_ON : sound will loop and initially start on in level (will toggle on/off when triggered).
LOOPED_OFF : sound will loop and initially start off in level (will toggle on/off when triggered).
GLOBAL : sound will play full volume throughout the level.
ACTIVATOR : sound will play only for the player that activated the target.
BROADCAST : sound will play throughout the level but has attenuation (gets softer as you get further)
-------- NOTES --------
The path portion value of the "noise" key can be replaced by the implicit folder character "*" for triggered sounds that belong to a particular player model. For example, if you want to create a "bottomless pit" in which the player screams and dies when he falls into, you would place a trigger_multiple over the floor of the pit and target a target_speaker with it. Then, you would set the "noise" key to "*falling1.wav". The * character means the current player model's sound folder. So if your current player model is Visor, * = sound/player/visor, if your current player model is Sarge, * = sound/player/sarge, etc. This cool feature provides an excellent way to create "player-specific" triggered sounds in your levels.

The combination of the "wait" and "random" keys can be used to play non-looping sounds without requiring an activating trigger but both keys must be used together. The value of the "random" key is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).*/

TEAM_* ENTITIES

//=============================================================================


//=============================================================================

/*QUAKED team_CTF_blueflag (0 .2 1) (-16 -16 -16) (16 16 16)
Blue team flag for CTF games.
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/flags/b_flag.md3"*/

//=============================================================================

/*QUAKED team_CTF_blueplayer (0 .2 1) (-16 -16 -24) (16 16 48)
Initial Blue team spawning position for CTF games. This is where players spawn when they join the Blue team.
-------- KEYS --------
target : this can point at a target_give entity for respawn freebies.
model="models/mapobjects/player/player.md3"*/

//=============================================================================

/*QUAKED team_CTF_bluespawn (0 .4 1) (-16 -16 -24) (16 16 48)
Blue team respawning position for CTF games. This is where Blue team players respawn after they get fragged.
-------- KEYS --------
target : this can point at a target_give entity for respawn freebies.
model="models/mapobjects/player/player.md3"*/

//=============================================================================

/*QUAKED team_CTF_redflag (1 .2 0) (-16 -16 -16) (16 16 16)
Red team flag for CTF games.
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/flags/r_flag.md3"*/

//=============================================================================

/*QUAKED team_CTF_redplayer (1 .2 0) (-16 -16 -24) (16 16 48)
Initial Red team spawning position for CTF games. This is where players spawn when they join the Red team.
-------- KEYS --------
target : this can point at a target_give entity for respawn freebies.
model="models/mapobjects/player/player.md3"*/

//=============================================================================

/*QUAKED team_CTF_redspawn (1 .5 1) (-16 -16 -24) (16 16 48)
Red team respawning position for CTF games. This is where Red team players respawn after they get fragged.
-------- KEYS --------
target : this can point at a target_give entity for respawn freebies.
model="models/mapobjects/player/player.md3"*/

//=============================================================================

/*QUAKED team_CTF_neutralflag (1 .2 1) (-16 -16 -24) (16 16 32) SUSPENDED
Neutral flag (One Flag CTF only) but used to calculate the alternate route goal since version 1.29 but not 
documented. 

Place this entity at exactly the mid point between the flags on the best shortest distance route, or maybe the best
longest distance route. Needs a little head thinking.

Also, I've noticed some gains from putting this at exactly 0,0,0 and building the map around it.

-------- KEYS --------
angle : an angle facing needs to be set for this entity. This item has a specific facing. If you wanted to. We don't use it.
gametype : Don't need to enter this, but for Team Arena it's oneflag.
-------- SPAWNFLAGS --------
SUSPENDED : item will spawn where it was placed in map and won't drop to the floor.
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/flags/n_flag.md3"*/
//=============================================================================


//=============================================================================

TRIGGER_* ENTITIES

//=============================================================================

/*QUAKED trigger_bomb (.5 .5 .8) (-16 -16 -16) (16 16 16) TEAM_RED TEAM_BLUE
-------- KEYS --------
"angles" set the angle of the model. Ie 270 0 0
"model" set the model of bomb. Default is c4.
"goalnumber" A goalnumber of a breakble. breakables too close to one bomb will be activated, use this to prevent that..
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/weapons2/c4/c4.md3"*/
//=============================================================================
/*QUAKED trigger_always (.5 .5 .5) (-8 -8 -8) (8 8 8)
Automatic trigger. It will fire the entities it targets as soon as it spawns in the game.
-------- KEYS --------
target : this points to the entity to activate.
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.*/

//=============================================================================

/*QUAKED trigger_hurt (.5 .5 .5) ? TOGGLE_ON TOGGLE_OFF SILENT NO_PROTECTION SLOW
Any player that touches this will be hurt by "dmg" points of damage once per server frame (very fast). A sizzling sound is also played while the player is being hurt.
-------- KEYS --------
dmg : number of points of damage inflicted to player per server frame (default 5 - integer values only).
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.
wf_team : can be set to "1" (red) or "2" (blue) use 1 to hurt red players etc
-------- SPAWNFLAGS --------
TOGGLE_ON: Trigger hurt spawns inactive and can be targeted
TOGGLE_OFF: Trigger hurt spawns active and can be targeted
SILENT : supresses the sizzling sound while player is being hurt.
NO_PROTECTION : player will be hurt regardless of protection (see Notes).
SLOW : changes the damage rate to once per second.
-------- NOTES --------
The invulnerability power-up (item_enviro) does not protect the player from damage caused by this entity regardless of whether the NO_PROTECTION spawnflag is set or not. Triggering a trigger_hurt will have no effect if the TOGGLE spawnflag is not set. A trigger_hurt always starts on in the game.*/

//=============================================================================

/*QUAKED trigger_multiple (.5 .5 .5) ? TOGGLE_ON TOGGLE_OFF 
"wait" : Seconds between triggerings, 0.5 default, -1 = one time only.
"random" wait variance, default is 0
Variable sized repeatable trigger.  Must be targeted at one or more entities.
so, the basic time between firing is a random time between
(wait - random) and (wait + random)
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.
You can also target shaders with targetshadername and targetshadernewname keys, where the targetshadername is the current shader drawn in the world, and the targetnewshadername is the shader to replace that. It's global, and won't work with lightmaps.
*/
//=============================================================================

/*QUAKED trigger_push (.5 .5 .5) ?
This is used to create jump pads and launch ramps. It MUST point to a target_position or info_notnull entity to work. Unlike target_push, this is client side predicted.
-------- KEYS --------
target : this points to the target_position to which the player will jump.
gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.
-------- NOTES --------
To make a jump pad or launch ramp, place the target_position/info_notnull entity at the highest point of the jump and target it with this entity.*/

//=============================================================================
//QUAKED trigger_grav (.5 .5 .5) ? StartActive TriggerSpawn SILENT
//Any player that touches this will take the applied gravity once per server frame (very fast)..
//-------- KEYS --------
//notfree : when set to 1, entity will not spawn in "Free for all" and "Tournament" modes. 
//gametype: gametypes may be ffa, lms, team, reverse, ctf, lmsT, or mission. Seperate multiple gametypes by spaces. these entities will only spawn in these gametypes if it's specified.
//notteam : when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
//notsingle : when set to 1, entity will not spawn in Single Player mode (bot play mode).
//notta: when set to 1, entity will not spawn in Team Arena
//notq3a: when set to 1, entity will not spawn in stock Quake 3
//targetname: give the trigger a name so it can be actuvated by buttons etc.
//count: set this to the desired gravity, default map grav is 800.
//-------- SPAWNFLAGS --------
//Start Active: starts the trigger at enabled
//Trigger Spawn : Used to activate or deactivate, use targetname-target with button etc.
//SILENT : supresses the wind sound while player is touching it.
//-------- NOTES --------
//

//=============================================================================

/*QUAKED Dummy_Stand(1 .2 0) (-16 -16 -24) (16 16 48)
Used to measure spaces.*/

//=============================================================================

/*QUAKED Dummy_Crouch_Walk(1 .2 0) (-16 -16 -24) (16 16 40)
Used to measure spaces.*/

//=============================================================================

/*QUAKED Dummy_Crouch(1 .2 0) (-16 -16 -24) (16 16 28)
Used to measure spaces.*/

//=============================================================================

WORLDSPAWN ENTITY

//=============================================================================

/*QUAKED worldspawn (0 0 0) ?
Only used for the world.
-------- KEYS --------
message : text to print at user logon. Used for name of level.
music : path/name of looping .wav file used for level's music (eg. music/sonic5.wav).
ambient : Adds a constant value to overall lighting. Use is not recommended. Ambient light will have a tendency to flatten out variations in light and shade.
_color : RGB value for ambient, gridlight, minvertexlight, minlight. (default is 0 0 0).
alphamap: Name of the shader for positioning terrain on worldspawn.
shader: Name of the shader for terrain.
_lightmapscale: used for lightmap sampling. If you have any func_ ents and the _lightmapscale is not specified on those ents, this won't affect them.
_foghull: used to point to the shader you want to use as your foghull. Ex: textures/foghull/foghull_sky
_farplanedist: This is the setting for which visclusters will be culled. ***** USE THE "trailbroadcast" "1" key/value with this *****
_celshader: this is the shader name for 'cell shading', ex: cel/ink
gravity : gravity of level (default is normal gravity: 800).
gridsize : This can also be set with the common/lightgrid shader. Granularity of the lightgrid created by q3map. Value is three integers separated by spaces, representing number of units between grid points in X Y Z. Default gridsize value is 128 128 256. Use larger powers of 2 to reduce BSP size and compile time on very large maps.
_blocksize : q3map always splits the BSP tree along the planes X=_blocksize*n and Y=_blocksize*n. Default _blocksize value is 1024. Increase the blocksize using larger powers of 2 to reduce compile times on very large maps with a low structural brush density.
_noshadersun: Use "1" or not at all. Disables the q3map_sun parameter in shaders, used with a sun light entity. See the "Light" description for more information.
_minlight : Minimum light level (better then ambient, raises the low-end (black) clamp level.
_minvertexlight : Minimum vertex light level
_mingridlight: Minimum light grid level
_keeplights: Set to 1 to stop the stripping of lights during compile
enablebreath : Activates breath puff to players.
enabledust : Activates dust puff to surfaceparm dust.
sunfile : A fx file for sunflares.
precipAmount : The amount of atmosphere effects. Default 512.
enablePrecip : The type of effect used, 0 none 1 rain 2 snow.
-------- NOTES --------
Celshading is a simple technique for simulating ink outlines around 3d objects. The ink drawsurfs are huge non-planer continuous black meshes. Should really really use metasurface merger for a nice effect.
Lightmapscale default is 1, equal to 32 samples per luxel. going up makes for coarser lightmaps, going down makes for finer ones. Alot of the bsp size can be attributed to the finer detailed lightmaps so use your judgement. Lightmapscale can chew the hell out of your ram quicker then you may realize. It may be better to just add it to the func_groups you wish a nice effect to appear on.
minlight and minvertexlight: These work like ambient light, using the worldspawn _color key to set a minimum lighting value (as opposed to base lighting value for ambient) for lightmaps or vertexes in the world. Good for brightening up totally black areas if necessary.
*/
//==============================================================================


/*QUAKED _skybox (0.77 0.88 1.0) (-4 -4 -4) (4 4 4)
-------- KEYS --------
"angle" : rotation angle of the sky surfaces.
"angles" : Individual control of PITCH, YAW, and ROLL (default 0 0 0).
"_scale" : scaling factor (default 64), good values are between 50 and 300, depending on the map.
-------- SPAWNFLAGS --------
(none)
-------- NOTES --------
Compiler-only entity that specifies the origin of a skybox (a wholly contained, separate area of the map),
similar to some games' portal skies. When compiled with Q3Map2, the skybox surfaces will be visible from any 
place where sky is normally visible. It will cast shadows on the normal parts of the map, and can be used
with cloud layers and other effects.
*/
